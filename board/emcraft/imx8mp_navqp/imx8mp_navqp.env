// SPDX-License-Identifier: GPL-2.0+
/*
 * Copyright 2024 Gilles Talis <gilles.talis@gmail.com>
 */

#include <config_distro_bootcmd.h>
#include <env/nxp/imx_env.env>

initrd_addr=0x43800000
initrd_high=0xffffffffffffffff
emmc_dev=2
sd_dev=1

enable_3v3p=mw.l 0x303301D0 5; mw.l 0x30330430 0x6; mw.l 0x30240000 0x4; mw.l 0x30240004 0x4
enable_5v0p=mw.l 0x30330118 5; mw.l 0x30330378 0x6; mw.l 0x30220000 0x0000; mw.l 0x30220004 0x4000
boot_fdt=try
boot_fit=no
boot_targets=mmc1 mmc2
bootm_size=0x10000000
console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200
splashimage=0x50000000
fdt_addr_r=0x43000000
fdt_addr=0x43000000
fdt_high=0xffffffffffffffff
fdtfile=CONFIG_DEFAULT_FDT_FILE
image=Image
ip_dyn=yes
mmcdev=CONFIG_SYS_MMC_ENV_DEV
mmcpart=1
mmcroot=/dev/mmcblk1p2 rootwait rw
mmcautodetect=yes
scriptaddr=0x43500000
mmcargs=setenv bootargs console=${console} root=${mmcroot}
prepare_mcore=setenv mcore_clk clk-imx8mp.mcore_booted
kernel_addr_r=CONFIG_SYS_LOAD_ADDR
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile}
mmcboot=echo Booting from mmc ...;
	run mmcargs;
	if test ${boot_fit} = yes || test ${boot_fit} = try; then
		bootm ${loadaddr};
	else
		if run loadfdt; then
			booti ${loadaddr} - ${fdt_addr_r};
		else
			echo WARN: Cannot load the DT;
		fi;
	fi;
netargs=setenv bootargs console=${console} root=/dev/nfs
	ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net ...;
	run netargs;
	if test ${ip_dyn} = yes; then
		setenv get_cmd dhcp;
	else
		setenv get_cmd tftp;
	fi;
	${get_cmd} ${loadaddr} ${image};
	if test ${boot_fit} = yes || test ${boot_fit} = try; then
		bootm ${loadaddr};
	else
		if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then
			booti ${loadaddr} - ${fdt_addr_r};
		else
			echo WARN: Cannot load the DT;
		fi;
	fi;
bsp_bootcmd=echo Running BSP bootcmd ...;
	echo Enabling 3V3P/5VP; run enable_3v3p; run enable_5v0p;
	mmc dev ${mmcdev};
	if run loadimage; then
		run mmcboot;
	else
		run netboot;
	fi;
