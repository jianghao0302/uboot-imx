/* SPDX-License-Identifier: (GPL-2.0+ OR MIT) */
#include <env/nxp/imx_env.env>

#ifdef CONFIG_ANDROID_SUPPORT
splashpos=m,m
splashimage=0x50000000
fdt_high=0xffffffffffffffff
initrd_high=0xffffffffffffffff
emmc_dev=2
sd_dev=1
#else

initrd_addr=0x43800000
initrd_high=0xffffffffffffffff
emmc_dev=2
sd_dev=1

boot_fdt=try
boot_fit=no
boot_targets=usb0 mmc1 mmc2 dhcp
bootm_size=0x10000000
console=ttymxc1,115200
splashimage=0x50000000
fdt_addr=0x43000000
fdt_addr_r=0x43000000
fdt_high=0xffffffffffffffff
fdtfile=CONFIG_DEFAULT_FDT_FILE
fdtoverlay_addr_r=0x49000000
initrd_addr=0x48080000
image=Image
ip_dyn=yes
kernel_addr_r=CONFIG_SYS_LOAD_ADDR
loadaddr=CONFIG_SYS_LOAD_ADDR
mmcautodetect=yes
mmcdev=CONFIG_SYS_MMC_ENV_DEV
mmcpart=1
mmcroot=/dev/mmcblk1p2 rootwait rw
prepare_mcore=setenv mcore_clk clk-imx8mn.mcore_booted;
pxefile_addr_r=0x40100000
ramdisk_addr_r=0x48080000
scriptaddr=0x43500000

nodes=/usbg1 /wdt-reboot /mcu_rdc /soc@0/gpu@38000000 /soc@0/bus@32c00000/lcdif@32e00000 /soc@0/bus@32c00000/dsi@32e10000 /audio-codec-bt-sco /sound-bt-sco /sound-spdif /audio-codec /sound-wm8524 /dsi-host /rm67199_panel /soc@0/bus@30800000/i2c@30a20000/pmic@25 /soc@0/bus@30800000/i2c@30a30000/adv7535@3d /soc@0/memory-controller@3d400000 /binman /soc@0/bus@30800000/crypto@30900000
sr_ir_v2_cmd=cp.b ${fdtcontroladdr} ${fdt_addr_r} 0x10000;
	fdt addr ${fdt_addr_r};
	for i in ${nodes}; do fdt rm ${i}; done


#ifdef CONFIG_TARGET_IMX8MN_DDR4_EVK
jh_root_dtb=imx8mn-ddr4-evk-root.dtb
#else
jh_root_dtb=imx8mn-evk-root.dtb
#endif

jh_clk=
jh_mmcboot=mw 0x303d0518 0xff; setenv fdtfile ${jh_root_dtb};
	setenv jh_clk kvm.enable_virt_at_load=false clk_ignore_unused mem=1212MB;
	if run loadimage; then
		run mmcboot;
	else run jh_netboot; fi;
jh_netboot=mw 0x303d0518 0xff; setenv fdtfile ${jh_root_dtb}; setenv jh_clk kvm.enable_virt_at_load=false clk_ignore_unused mem=1212MB; run netboot;
mmcargs=setenv bootargs ${jh_clk} ${mcore_clk} console=${console} root=${mmcroot}
prepare_mcore=setenv mcore_clk clk-imx8mn.mcore_booted
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile}
mmcboot=echo Booting from mmc ...;
	run mmcargs;
	if test ${boot_fit} = yes || test ${boot_fit} = try; then
		bootm ${loadaddr};
	else
		if run loadfdt; then
			booti ${loadaddr} - ${fdt_addr_r};
		else
			echo WARN: Cannot load the DT;
		fi;
	fi
netargs=setenv bootargs ${jh_clk} ${mcore_clk} console=${console} root=/dev/nfs
	ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net ...;
	run netargs;
	if test ${ip_dyn} = yes; then
		setenv get_cmd dhcp;
	else
		setenv get_cmd tftp;
	fi;
	${get_cmd} ${loadaddr} ${image};
	if test ${boot_fit} = yes || test ${boot_fit} = try; then
		bootm ${loadaddr};
	else
		if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then
			booti ${loadaddr} - ${fdt_addr_r};
		else
			echo WARN: Cannot load the DT;
		fi;
	fi;
bsp_bootcmd=echo Running BSP bootcmd ...;
	mmc dev ${mmcdev};
	if mmc rescan; then
		if run loadimage; then
			run mmcboot;
		else
			run netboot;
		fi;
	fi;

#endif
