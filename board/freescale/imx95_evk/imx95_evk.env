#include <env/nxp/imx_env.env>

#ifdef CONFIG_ANDROID_SUPPORT
splashpos=m,m
splashimage=0x9FFF0000
fdt_high=0xffffffffffffffff
initrd_high=0xffffffffffffffff
emmc_dev=0
sd_dev=1
#else

#ifdef CONFIG_AHAB_BOOT
sec_boot=yes
#else
sec_boot=no
#endif

#ifdef CONFIG_TARGET_IMX95_15X15_EVK
jh_root_dtb=imx95-15x15-evk-root.dtb
jh_mmcboot=setenv fdtfile ${jh_root_dtb};
	setenv jh_clk kvm.enable_virt_at_load=false cpuidle.off=1 clk_ignore_unused kvm-arm.mode=nvhe;
	setenv jh_root_mem 0x58000000@0x90000000,0xc0000000@0x180000000;
	if run loadimage; then
		run mmcboot;
	else run jh_netboot; fi;
jh_netboot=setenv fdtfile ${jh_root_dtb};
	setenv jh_root_mem 0x58000000@0x90000000,0xc0000000@0x180000000;
	setenv jh_clk kvm.enable_virt_at_load=false cpuidle.off=1 clk_ignore_unused kvm-arm.mode=nvhe; run netboot;
#else
jh_root_dtb=imx95-19x19-evk-root.dtb
jh_mmcboot=setenv fdtfile ${jh_root_dtb};
	setenv jh_clk kvm.enable_virt_at_load=false cpuidle.off=1 clk_ignore_unused kvm-arm.mode=nvhe;
	setenv jh_root_mem 0x58000000@0x90000000,0x300000000@0x180000000;
	if run loadimage; then
		run mmcboot;
	else run jh_netboot; fi;
jh_netboot=setenv fdtfile ${jh_root_dtb};
	setenv jh_root_mem 0x58000000@0x90000000,0x300000000@0x180000000;
	setenv jh_clk kvm.enable_virt_at_load=false cpuidle.off=1 clk_ignore_unused kvm-arm.mode=nvhe; run netboot;
#endif

domu-android-auto=no
xenhyper_bootargs=console=dtuart dom0_mem=4096M dom0_max_vcpus=2 pci-passthrough=on
xenlinux_bootargs=
xenlinux_console=hvc0 earlycon=xen
xenlinux_addr=0x9c000000
dom0fdt_file=CONFIG_DEFAULT_FDT_FILE
xenboot_common=${get_cmd} ${loadaddr} xen;
	${get_cmd} ${fdt_addr} ${dom0fdt_file};
	${get_cmd} ${xenlinux_addr} ${image};
	fdt addr ${fdt_addr};
	fdt resize 256;
	fdt mknode /chosen module@0;
	fdt set /chosen/module@0 reg <0x00000000 ${xenlinux_addr} 0x00000000 0x${filesize}>;
	fdt set /chosen/module@0 bootargs "${bootargs} ${xenlinux_bootargs}";
	fdt set /soc/bus@49000000/iommu@490d0000 status disabled;
	fdt set /chosen/module@0 compatible "xen,linux-zimage" "xen,multiboot-module";
	setenv bootargs ${xenhyper_bootargs};
	booti ${loadaddr} - ${fdt_addr};
xennetboot=setenv get_cmd dhcp;setenv console ${xenlinux_console};setenv jh_clk kvm.enable_virt_at_load=false clk_ignore_unused;run netargs;run xenboot_common;
xenmmcboot=setenv get_cmd "fatload mmc ${mmcdev}:${mmcpart}";setenv console ${xenlinux_console};setenv jh_clk kvm.enable_virt_at_load=false clk_ignore_unused;run mmcargs;run xenboot_common;

sr_ir_v2_cmd=cp.b ${fdtcontroladdr} ${fdt_addr_r} 0x10000; fdt addr ${fdt_addr_r};
	fdt set /soc/bus@44000000/mailbox@445b0000/sram@445b1000/scmi-sram-section@0 reg <0x00000000 0x00000080>;
	fdt rm /soc/mailbox@47530000;
	fdt rm /soc/usb@4c010010;

initrd_addr=0x93800000
initrd_high=0xffffffffffffffff
emmc_dev=0
sd_dev=1
scriptaddr=0x93500000
kernel_addr_r=CONFIG_SYS_LOAD_ADDR
image=Image
splashimage=0xA0000000
console=ttyLP0,115200 earlycon
fdt_addr_r=0x93000000
fdt_addr=0x93000000
cntr_addr=0xA8000000
cntr_file=os_cntr_signed.bin
boot_fit=no
fdtfile=CONFIG_DEFAULT_FDT_FILE
bootm_size=0x10000000
mmcdev=CONFIG_SYS_MMC_ENV_DEV
mmcpart=1
mmcroot=/dev/mmcblk1p2 rootwait rw
mmcautodetect=yes
mmcargs=setenv bootargs ${jh_clk} ${mcore_args} console=${console} root=${mmcroot}
prepare_mcore=setenv mcore_args pd_ignore_unused;
loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};
bootscript=echo Running bootscript from mmc ...; source
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile}
loadcntr=fatload mmc ${mmcdev}:${mmcpart} ${cntr_addr} ${cntr_file}
auth_os=booti ${cntr_addr}
boot_os=booti ${loadaddr} - ${fdt_addr_r};
mmcboot=echo Booting from mmc ...;
		run mmcargs;
		if test ${sec_boot} = yes; then
			run auth_os;
		else
			if test ${boot_fit} = yes || test ${boot_fit} = try; then
				bootm ${loadaddr};
			else
				if run loadfdt; then
					run boot_os;
				else
					echo WARN: Cannot load the DT;
				fi;
			fi;
		fi;
netargs=setenv bootargs ${jh_clk} ${mcore_args} console=${console} root=/dev/nfs
		ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net ...;
		run netargs;
		if test ${ip_dyn} = yes; then
			setenv get_cmd dhcp;
		else
			setenv get_cmd tftp;
		fi;
		if test ${sec_boot} = yes; then
			${get_cmd} ${cntr_addr} ${cntr_file};
			run auth_os;
		else
			${get_cmd} ${loadaddr} ${image};
			if test ${boot_fit} = yes || test ${boot_fit} = try; then
				bootm ${loadaddr};
			else
				if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then
					run boot_os;
				else
					echo WARN: Cannot load the DT;
				fi;
			fi;
		fi;
bsp_bootcmd=echo Running BSP bootcmd ...;
			mmc dev ${mmcdev}; if mmc rescan; then
			if run loadbootscript; then
				run bootscript;
			else
				if test ${sec_boot} = yes; then
					if run loadcntr; then
						run mmcboot;
					else run netboot;
					fi;
				else
					if run loadimage; then
						run mmcboot;
					else run netboot;
					fi;
				fi;
			fi;
		fi;

#endif
